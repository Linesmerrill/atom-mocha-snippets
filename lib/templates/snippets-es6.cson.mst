'.source.js.jsx':
  'mocha describe':
    'prefix': 'describe'
    'body': 'describe(\{{& quoteDelimiter}}$1\{{& quoteDelimiter}}, () => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha context':
    'prefix': 'context'
    'body': 'context(\{{& quoteDelimiter}}$1\{{& quoteDelimiter}}, () => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha it':
    'prefix': 'it'
    'body': 'it(\{{& quoteDelimiter}}$1\{{& quoteDelimiter}}, () => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha specify':
    'prefix': 'specify'
    'body': 'specify(\{{& quoteDelimiter}}$1\{{& quoteDelimiter}}, () => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha before':
    'prefix': 'before'
    'body': 'before(() => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha after':
    'prefix': 'after'
    'body': 'after(() => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha beforeEach':
    'prefix': 'beforeEach'
    'body': 'beforeEach(() => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha afterEach':
    'prefix': 'afterEach'
    'body': 'afterEach(() => {\n\t$2\n}){{expressionTerminator}}\n$3'
  'mocha pending':
    'prefix': 'pending'
    'body': 'it(\{{& quoteDelimiter}}$1\{{& quoteDelimiter}}){{expressionTerminator}}'
  'mocha retries':
    'prefix': 'retries'
    'body': 'this.retries(${1:integer}){{expressionTerminator}}'
  'mocha timeout':
    'prefix': 'timeout'
    'body': 'this.timeout(${1:milliseconds}){{expressionTerminator}}'
